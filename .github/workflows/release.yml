name: Release
on:
  #push:
  #  branches:
  #    - "main"
  workflow_dispatch: { }
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # one for each of archive2disk cexec grub2disk image2disk kexec oci2disk qemuimg2disk rootio slurp syslinux writefile
          - { "action": "image2disk", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "archive2disk", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "cexec", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "grub2disk", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "kexec", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "oci2disk", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "qemuimg2disk", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "rootio", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "slurp", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "syslinux", "platforms": "linux/amd64,linux/arm64" }
          #- { "action": "writefile", "platforms": "linux/amd64,linux/arm64" }
    name: "${{ matrix.action }} on ${{ matrix.platforms }}"
    env:
      OCI_TARGET: "quay.io/tinkerbellrpardini/actions"
      BUILDX_NO_DEFAULT_ATTESTATIONS: "1"
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker
        uses: crazy-max/ghaction-setup-docker@v3
        with:
          daemon-config: |
            {
              "features": {
                "containerd-snapshotter": true
              }
            }

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Login to quay.io
        uses: docker/login-action@v3
        with:
          registry: quay.io  # Use robot account!
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Pull, Build ${{matrix.action}} for ${{matrix.platforms}}
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{matrix.action}}/Dockerfile
          platforms: ${{matrix.platforms}}
          pull: true # Pull new version of base image, always; avoid bit-rot
          push: false # don't push, we'll load into Docker and push from there
          load: true
          cache-from: type=gha,scope=${{matrix.action}} # all-automatic Github Actions caching
          cache-to: type=gha,mode=max,scope=${{matrix.action}}
          tags: quay.io/tinkerbellrpardini/actions/${{matrix.action}}:latest
          #labels: |
          #  org.opencontainers.image.title=${{ github.repository }}
          #  org.opencontainers.image.description=${{ github.event.repository.description }}
          #  org.opencontainers.image.url=${{ github.event.repository.html_url }}
          #  org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          #  org.opencontainers.image.revision=${{ github.sha }}
          #  org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

      - name: Push ${{matrix.action}} for ${{matrix.platforms}}
        run: |
          docker push quay.io/tinkerbellrpardini/actions/${{matrix.action}}:latest || docker push quay.io/tinkerbellrpardini/actions/${{matrix.action}}:latest || docker push quay.io/tinkerbellrpardini/actions/${{matrix.action}}:latest
